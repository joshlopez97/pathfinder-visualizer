{"version":3,"sources":["components/space.jsx","constants.js","components/row.jsx","components/board.jsx","components/label.jsx","components/node.jsx","components/line.jsx","algorithms/random.js","algorithms/graph.js","algorithms/random_graph.js","algorithms/dijkstras.js","components/graph.jsx","components/controls.jsx","App.js","serviceWorker.js","index.js"],"names":["Space","id","this","props","row","column","className","Component","conf","navHeight","cellSize","cellsPerRow","nodeSize","draw_speed","solve_speed","lineClickRadius","Row","indices","i","push","map","value","index","key","Board","determineRows","window","innerWidth","innerHeight","Label","AnimatedLabel","animatedLabel","class","style","height","width","d","text","delay","styled","div","keyframes","Node","animationDelay","state","type","labelClass","AnimatedNode","label","Line","angle","properties","lineHolderStyle","top","start","Y","left","X","transform","margin","labelStyle","AnimatedLine","animatedLine","console","log","duration","Math","round","graphRenderTime","Random","approxCellsPerColumn","randomSpace","cell","endY","space","getBoundingClientRect","scrollY","scrollX","list","integer","length","xRange","yRange","spaceRow","spaceColumn","document","getElementById","min","max","floor","random","GraphBuilder","end","speed","_start","_end","_speed","_currentNode","_graph","lines","nodes","nodeNames","_line_map","name","getNodeName","startName","endName","startCoords","endCoords","distanceBetween","position","neighbors","lineExists","diffX","diffY","atan2","PI","sqrt","pow","animation_duration","saveNodes","line","coords","RandomGraph","numLines","_size","build","randomPath","numBranchPoints","range","branchFrom","graph","branchOrigin","numBranches","branchLength","concat","choice","prevLine","currLine","makeLine","coordinates","Object","assign","Dijkstras","random_graph","_random_graph","_solution","solve","distances","paths","pq","TinyQueue","node1","node2","startNode","keys","forEach","node","Infinity","delay_map","currNode","pop","neighbor","newLine","alt","shortest_path","gb","GraphButtons","appendSolutionToDOM","pathfinder","explorationHolder","Graph","solutionHolder","ReactDOM","unmountComponentAtNode","solution","render","appendGraphToDOM","container","graphHolder","onClick","startEndNodeLabels","Controls","algorithms","AlgorithmChooser","active","setState","showOptions","App","Boolean","location","hostname","match","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9fa3cff1.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './board.css';\n\nclass Space extends Component {\n  render() {\n    return (<td id={this.props.row + \"-\" + this.props.column}\n                className=\"space\">\n    </td>);\n  }\n}\n\nexport default Space;","const config = {\n  navHeight: 50,\n  cellSize: 5,\n  cellsPerRow: 50,\n  nodeSize: 4,\n  draw_speed: 1500,\n  solve_speed: 800,\n  lineClickRadius: 4\n};\n\nexport const conf = config;","import React, {Component} from 'react';\nimport Space from \"./space\";\nimport {conf} from \"../constants\";\nimport './board.css';\n\n\nclass Row extends Component {\n  render() {\n    let indices = [];\n    for (let i = 0; i < conf.cellsPerRow; i++)\n    {\n      indices.push(i);\n    }\n    return (<tr id={\"row-\" + this.props.row} className=\"space-row\">\n      {indices.map((value, index) => {\n        return <Space row={this.props.row} column={index} key={index}/>\n      })}\n    </tr>);\n  }\n}\n\nexport default Row;","import React, {Component} from 'react';\nimport Row from \"./row\";\nimport {conf} from '../constants';\nimport './board.css';\n\nclass Board extends Component {\n  determineRows = () => {\n    const cellSize = window.innerWidth / conf.cellsPerRow;\n    return window.innerHeight / cellSize;\n  };\n\n  render() {\n    const indices = [];\n    for (let i = 0; i < this.determineRows(); i++)\n    {\n      indices.push(i);\n    }\n    return (\n      <div className=\"board\">\n        <table className=\"spaces-holder\">\n          <tbody>\n          {indices.map((value, index) => {\n            return <Row row={index} key={index}/>\n          })}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default Board;","import React, {Component} from 'react';\nimport {keyframes} from \"styled-components\";\nimport styled from \"styled-components\";\n\nclass Label extends Component {\n  get animatedLabel() {\n    return this.props.delay > 0 ? (styled.div`\n        animation: ${keyframes`\n          0% { opacity: 0 }\n          100% { opacity: 100 }\n        `} 0.5s linear forwards;\n        animation-delay: ${this.props.delay}s;\n    `) : styled.div``;\n  }\n\n  render() {\n    const AnimatedLabel = this.animatedLabel;\n    return (\n      <AnimatedLabel className={`label ${!!this.props.class ? this.props.class : \"\"}`} style={this.props.style}>\n        <svg className=\"caret-holder\" height=\"5\" width=\"8\">\n          <path d=\"M0 5 L4 0 L8 5\"/>\n        </svg>\n        <span className=\"label-value\">{this.props.text}</span>\n      </AnimatedLabel>\n    );\n  }\n}\n\nexport default Label;","import React, {Component} from 'react';\nimport './graph.css';\nimport Label from \"./label\";\nimport {keyframes} from \"styled-components\";\nimport styled from \"styled-components\";\n\nclass Node extends Component {\n  constructor(props) {\n    super(props);\n    this.style = this.props.style || {};\n    this.style.animationDelay = `${this.props.delay || 0}s`;\n    this.state = {type: this.props.type || \"normal\"};\n    this.labelClass = \"\";\n    if (this.props.type === 'start' || this.props.type === 'end') {\n      this.labelClass = this.props.type;\n    }\n  }\n\n\n  render() {\n    const fadeIn = () => keyframes`\n        0% {\n            opacity: 0\n        }\n        100% {\n            opacity: 100\n        }\n    `;\n    const AnimatedNode = styled.div`\n        animation: ${fadeIn} 0.5s linear forwards;\n        animation-delay: ${this.style.animationDelay};\n    `;\n    return (\n      <div className={`node-holder ${this.state.type}`}>\n        {!!this.props.label ?\n          <Label class={this.labelClass} type={this.state.type} style={this.props.style} text={this.props.label}/> : \"\"}\n        <AnimatedNode style={this.props.style} className={`node ${this.state.type}`}/>\n      </div>\n    );\n  }\n}\n\nexport default Node;","import React, {Component} from 'react';\nimport styled, {keyframes} from 'styled-components';\nimport {conf} from '../constants';\nimport './graph.css';\nimport Node from \"./node\";\nimport Label from \"./label\";\n\nclass Line extends Component {\n  constructor(props) {\n    super(props);\n    this.angle = props.properties.angle;\n    this.width = props.properties.width;\n    this.lineHolderStyle = {\n      width: this.width,\n      top: this.props.start.Y - conf.navHeight,\n      left: this.props.start.X,\n      transform: `rotate(${this.angle}deg`,\n      height: conf.lineClickRadius * 2,\n      margin: `${conf.lineClickRadius * -1}px 0`\n    };\n    this.labelStyle = {\n      transform: `rotate(${-1 * this.angle}deg`,\n      top: conf.lineClickRadius\n    };\n  }\n\n  get animatedLine() {\n    const growLine = () => keyframes`\n        0% { width: 0 }\n        100% { width: ${this.width}px }\n    `;\n    return (styled.div`\n        animation: ${growLine} ${this.props.properties.duration}s linear forwards;\n        animation-delay: ${this.props.delay}s;\n    `);\n  }\n\n  render() {\n    const AnimatedLine = this.animatedLine;\n    console.log(this.props.type);\n    return (\n      <div className=\"line-container\">\n        <div style={this.lineHolderStyle} className=\"line-holder\">\n          <Node delay={this.props.delay}/>\n          <Node delay={this.props.delay + this.props.properties.duration} type={\"right\"}/>\n          <AnimatedLine className=\"line\"/>\n          <div style={this.labelStyle} className=\"label-holder\">\n            <Label text={Math.round(this.width)} delay={this.props.type === \"solve\" ? this.props.graphRenderTime : 0}/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Line;","import {conf} from \"../constants\";\n\nexport default class Random {\n  static coordinates()\n  {\n    const approxCellsPerColumn = (window.innerHeight - conf.navHeight) / (window.innerWidth / conf.cellsPerRow);\n    const randomSpace = Random.cell(\n      [1, conf.cellsPerRow - 2],\n      [1, approxCellsPerColumn - 2]);\n    let endY = randomSpace.space.getBoundingClientRect().top + window.scrollY;\n    let endX = randomSpace.space.getBoundingClientRect().left + window.scrollX;\n    return {X: endX, Y: endY};\n  }\n\n  static choice(list) {\n    return list[Random.integer(0, list.length - 1)];\n  }\n  static cell(xRange, yRange) {\n    let spaceRow = Random.integer(yRange[0], yRange[1]);\n    let spaceColumn = Random.integer(xRange[0], xRange[1]);\n    let id = spaceRow + '-' + spaceColumn;\n    return {space: document.getElementById(id), row: spaceRow, column: spaceColumn};\n  }\n\n  static integer(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n}","export default class GraphBuilder {\n  constructor(start, end, speed) {\n    this._start = start;\n    this._end = end;\n    this._speed = speed;\n    this._currentNode = 1;\n    this._graph = {\n      lines: [],\n      nodes: {},\n      nodeNames: {},\n      start: start,\n      end: end,\n      duration: 0\n    };\n    this._line_map = {};\n    this._graph.start.name = this.getNodeName(start);\n    this._graph.end.name = this.getNodeName(end);\n  }\n\n  get graph() {\n    return this._graph;\n  }\n\n  saveNodes(startName, endName, startCoords, endCoords, distanceBetween) {\n    if (!(startName in this._graph.nodes)) {\n      this._graph.nodes[startName] = {\n        position: startCoords,\n        neighbors: {}\n      }\n    }\n    if (!(endName in this._graph.nodes)) {\n      this._graph.nodes[endName] = {\n        position: endCoords,\n        neighbors: {}\n      }\n    }\n    this._graph.nodes[startName].neighbors[endName] = distanceBetween;\n    this._graph.nodes[endName].neighbors[startName] = distanceBetween;\n  }\n\n  makeLine(startCoords, endCoords, delay) {\n    const startName = this.getNodeName(startCoords);\n    const endName = this.getNodeName(endCoords);\n    if (!this.lineExists(startName, endName))\n    {\n      console.log(`makeLine(${startName}, ${endName})`);\n      const diffX = endCoords.X - startCoords.X,\n        diffY = endCoords.Y - startCoords.Y;\n      const angle = Math.atan2(diffY, diffX) * (180 / Math.PI);\n      const width = Math.sqrt(Math.pow(diffX, 2) + Math.pow(diffY, 2));\n      const animation_duration = width / this._speed;\n      this.saveNodes(startName, endName, startCoords, endCoords, width);\n      this._graph.duration = Math.max(this._graph.duration, delay + animation_duration);\n      const line = {\n        start: startCoords,\n        end: endCoords,\n        delay: delay,\n        properties: {\n          angle: angle,\n          width: width,\n          duration: animation_duration\n        }\n      };\n      this._graph.lines.push(line);\n      this._line_map[`${startName}-${endName}`] = line;\n      return line;\n    }\n    console.log(`Line ${startName}-${endName} exists`);\n    return this._line_map[`${startName}-${endName}`] || this._line_map[`${endName}-${startName}`];\n  }\n\n  getNodeName(coords) {\n    return typeof this._graph.nodeNames[`${coords.X},${coords.Y}`] === 'undefined'\n      ? this._graph.nodeNames[`${coords.X},${coords.Y}`] = `N${this._currentNode++}`\n      : this._graph.nodeNames[`${coords.X},${coords.Y}`];\n  }\n\n  lineExists(start, end) {\n    return !!this._line_map[`${start}-${end}`] || !!this._line_map[`${end}-${start}`];\n  }\n}","import Random from \"./random\";\nimport GraphBuilder from \"./graph\";\nimport {conf} from '../constants';\n\nexport default class RandomGraph extends GraphBuilder {\n  constructor(start, end, numLines) {\n    super(start, end, conf.draw_speed);\n    this._size = numLines;\n    this.build();\n  }\n\n  build() {\n    let lines = this.randomPath(this._start, this._end);\n    const numBranchPoints = Math.floor(this._size / 2.5),\n      range = Math.floor(lines.length / numBranchPoints);\n    for (let i = 0; i < numBranchPoints; i++) {\n      lines = this.branchFrom(lines[Random.integer(i * range, (i + 1) * range)], lines, Random.integer(2, 4));\n    }\n    console.log(this.graph);\n    return this._graph;\n  }\n\n  branchFrom(branchOrigin, lines, numBranches, branchLength = 3) {\n    for (let i = 0; i < numBranches; i++) {\n      lines = lines.concat(this.randomPath(branchOrigin.start, Random.choice(lines).start, branchLength, branchOrigin.delay));\n    }\n    return lines;\n  }\n\n  randomPath(start, end, numLines = 10, delay = 0) {\n    let lines = [];\n    let prevLine = {}, currLine = this.makeLine(start, Random.coordinates(), delay);\n    for (let i = 0; i < numLines; i++) {\n      lines.push(currLine);\n      prevLine = Object.assign({}, currLine);\n      currLine = this.makeLine(prevLine.end, Random.coordinates(), prevLine.delay + prevLine.properties.duration);\n    }\n    currLine = this.makeLine(prevLine.end, end, prevLine.delay + prevLine.properties.duration);\n    lines.push(currLine);\n    return lines;\n  }\n}","import GraphBuilder from \"./graph\";\nimport TinyQueue from 'tinyqueue';\nimport {conf} from '../constants';\n\nexport default class Dijkstras extends GraphBuilder {\n  constructor(random_graph) {\n    super(random_graph.start, random_graph.end, conf.solve_speed);\n    this._graph.lines = [];\n    this._random_graph = random_graph;\n    this._solution = this.solve();\n  }\n\n  get solution() {\n    return this._solution;\n  }\n\n  solve() {\n    let distances = {};\n    let paths = {};\n    let pq = new TinyQueue([], (node1, node2) => {\n      return node1.value - node2.value;\n    });\n\n    const startNode = this._random_graph.start.name;\n    distances[startNode] = 0;\n    paths[startNode] = [];\n    pq.push({name: startNode, value: 0});\n    Object.keys(this._random_graph.nodes).forEach(node => {\n      if (node !== startNode) {\n        distances[node] = Infinity;\n        paths[node] = [];\n      }\n    });\n    let delay_map = {};\n    while (pq.length > 0) {\n      let currNode = pq.pop().name;\n      Object.keys(this._random_graph.nodes[currNode].neighbors).forEach(neighbor => {\n        let delay = delay_map[currNode] || 0;\n        let newLine = this.makeLine(this._random_graph.nodes[currNode].position, this._random_graph.nodes[neighbor].position, delay);\n        delay_map[neighbor] = newLine.delay + newLine.properties.duration;\n        let alt = distances[currNode] + this._random_graph.nodes[currNode].neighbors[neighbor];\n        if (alt < distances[neighbor]) {\n          distances[neighbor] = alt;\n          paths[neighbor] = paths[currNode].concat([neighbor]);\n          pq.push({name: neighbor, value: distances[neighbor]});\n        }\n      });\n    }\n    let shortest_path = paths[this._end.name];\n\n    let gb = new GraphBuilder(this._start, this._end, conf.draw_speed);\n    let delay = this._graph.duration;\n    let prevLine = {}, currLine = gb.makeLine(this._start, this._random_graph.nodes[shortest_path[0]].position, delay);\n    for (let i = 1; i < shortest_path.length; i++) {\n      prevLine = Object.assign({}, currLine);\n      currLine = gb.makeLine(prevLine.end, this._random_graph.nodes[shortest_path[i]].position, prevLine.delay + prevLine.properties.duration);\n    }\n    return gb;\n  }\n}","import React, {Component} from 'react';\nimport {conf} from '../constants';\nimport ReactDOM from 'react-dom';\nimport Line from \"./line\";\nimport Random from \"../algorithms/random\";\nimport RandomGraph from \"../algorithms/random_graph\";\nimport Node from \"./node\";\nimport Dijkstras from \"../algorithms/dijkstras\";\n\nclass GraphButtons extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  appendSolutionToDOM = () => {\n    if (!!this.random_graph) {\n      this.pathfinder = new Dijkstras(this.random_graph.graph);\n      const explorationHolder = Graph.explorationHolder,\n        solutionHolder = Graph.solutionHolder;\n      ReactDOM.unmountComponentAtNode(explorationHolder);\n      ReactDOM.unmountComponentAtNode(solutionHolder);\n      console.log(this.pathfinder.solution);\n      ReactDOM.render(<Graph graph={this.pathfinder.graph}/>, explorationHolder);\n      ReactDOM.render(<Graph type={\"solve\"} graph={this.pathfinder.solution.graph}/>, solutionHolder);\n    }\n  };\n\n  appendGraphToDOM = () => {\n    this.random_graph = new RandomGraph(Random.coordinates(), Random.coordinates(), 20);\n    let container = Graph.graphHolder;\n    ReactDOM.unmountComponentAtNode(container);\n    ReactDOM.unmountComponentAtNode(Graph.explorationHolder);\n    ReactDOM.unmountComponentAtNode(Graph.solutionHolder);\n    ReactDOM.render(<Graph type={\"random\"} graph={this.random_graph.graph}/>, container);\n  };\n\n  render() {\n    return (\n      <div className=\"graph-buttons\">\n        <button onClick={this.appendSolutionToDOM}>Solve</button>\n        <button onClick={this.appendGraphToDOM}>New Graph</button>\n      </div>\n    )\n  }\n}\n\n\nclass Graph extends Component {\n  constructor(props) {\n    super(props);\n    this.delay = this.props.delay || 0;\n  }\n\n  static get graphHolder() {\n    return document.getElementById('graph-holder');\n  }\n\n  static get explorationHolder() {\n    return document.getElementById('exploration-holder');\n  }\n\n  static get solutionHolder() {\n    return document.getElementById('solution-holder');\n  }\n\n  get startEndNodeLabels() {\n    return (<div>\n      <Node type=\"start\" label=\"Start\" delay={this.props.graph.duration + this.delay} style={{\n        top: this.props.graph.start.Y - conf.navHeight,\n        left: this.props.graph.start.X,\n        animationDelay: `${this.delay + this.props.graph.duration}s`\n      }}/>\n      <Node type=\"end\" label=\"End\" delay={this.props.graph.duration + this.delay} style={{\n        top: this.props.graph.end.Y - conf.navHeight,\n        left: this.props.graph.end.X\n      }}/>\n    </div>);\n  }\n\n  render() {\n    const type = this.props.type,\n      graphRenderTime = this.props.graph.duration;\n    return (<div className=\"graph\" id=\"graph\">\n      {(this.props.type === \"random\" ? this.startEndNodeLabels : \"\")}\n      {\n        this.props.graph.lines.map((value, index) => {\n          return <Line start={value.start}\n                       end={value.end}\n                       delay={this.delay + value.delay}\n                       properties={value.properties}\n                       graphRenderTime={graphRenderTime}\n                       type={type}\n                       key={index}/>;\n        })\n      }\n    </div>);\n  }\n}\n\nexport default GraphButtons;","import React, {Component} from 'react';\n\nclass Controls extends Component {\n  render() {\n    return (\n      <div className=\"controls\">\n        <AlgorithmChooser algorithms={[\"Dijkstra's\"]}/>\n      </div>\n    );\n  }\n}\n\nclass AlgorithmChooser extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {choice: props.algorithms[0], active: false}\n  }\n\n  showOptions() {\n    this.setState(state => (Object.assign(state, {\n      active: !state.active\n    })));\n  }\n\n  render() {\n    return (\n      <div className=\"algorithm-dropdown\">\n        <div onClick={() => this.showOptions()} className=\"algorithm-chooser button\">\n          <span>{this.state.choice}</span>\n          <span className={`dropdown-caret${!this.state.active? \"\" : \" flipped\"}`}>&#9660;</span>\n        </div>\n        <div className={`algorithm-options${this.state.active? \"\" : \" hidden\"}`}>\n          {this.props.algorithms.map((value, index) => {\n            return <div className=\"algorithm-option button\" key={index}>{value}</div>;\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Controls;","import React from 'react';\nimport './App.css';\nimport Board from \"./components/board\";\nimport GraphButtons from \"./components/graph\";\nimport Controls from \"./components/controls\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"navigation\">\n        <div className=\"nav-items\">\n          <GraphButtons/>\n          <Controls/>\n        </div>\n      </div>\n      <div className=\"graph-holder\" id=\"graph-holder\"/>\n      <div className=\"graph-holder\" id=\"exploration-holder\"/>\n      <div className=\"graph-holder\" id=\"solution-holder\"/>\n      <Board/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}